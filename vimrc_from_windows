set backspace=indent,eol,start
syntax on
set hidden
set noerrorbells
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set nu
set linespace=4
set nowrap
set smartcase
set noswapfile
set nobackup
set incsearch
set cmdheight=2
set splitbelow
" Give more space for displaying messages.
set cmdheight=2
set updatetime=50
set shortmess+=c
set belloff=all
"set colorcolumn=80
noremap <Leader>y "*y
noremap <Leader>p "*p
highlight ColorColumn ctermbg=0 guibg=lightgray
let  &pythonthreedll = 'C:\Users\vesov\AppData\Local\Programs\Python\Python37\python37.dll'
let g:UltiSnipsUsePythonVersion = 3
 set relativenumber
 set hlsearch
  call plug#begin()
  Plug 'mattn/emmet-vim'
  Plug 'https://github.com/rafi/awesome-vim-colorschemes'
  Plug 'MarcWeber/vim-addon-mw-utils'
  Plug 'shawncplus/phpcomplete.vim'
  Plug 'tomtom/tlib_vim'
  Plug 'garbas/vim-snipmate'

  " Optional:
  Plug 'honza/vim-snippets'
  Plug 'tpope/vim-fugitive'
  Plug 'https://github.com/tyrannicaltoucan/vim-deep-space'
  Plug 'https://github.com/jiangmiao/auto-pairs'
  Plug 'https://github.com/kien/ctrlp.vim'
 " Plug 'SirVer/ultisnips'
  Plug 'voldikss/vim-floaterm'
  Plug 'tpope/vim-fugitive'
  Plug 'mileszs/ack.vim'
  Plug 'preservim/nerdcommenter'
  Plug 'airblade/vim-gitgutter'
  Plug 'itchyny/lightline.vim'
  Plug 'prettier/vim-prettier', { 'do': 'npm install' }
  Plug 'https://github.com/wesQ3/vim-windowswap'
  Plug 'scrooloose/nerdcommenter'
  Plug 'chuling/vim-equinusocio-material'
  Plug 'preservim/nerdtree'
 call plug#end()
 
 " make vertsplit invisible
 let g:equinusocio_material_hide_vertsplit = 1
 set termguicolors
 colorscheme PaperColor
" colorscheme gruvbox
 let g:floaterm_keymap_new    = '<Home>'
  let g:floaterm_keymap_toggle   = '<End>'
  hi FloatermBorder guibg=black guifg=cyan


 map <C-k> :NERDTreeToggle<CR>
 let g:NERDTreeDirArrowExpandable = '?'
 let g:NERDTreeDirArrowCollapsible = '?'
 "autocmd vimenter * NERDTree
 
 let g:prettier#exec_cmd_path = "~/.vim/plugged/vim-prettier/node_mod    ules/.bin/prettier"
    imap jj <Esc> 
 " Console log from insert mode; Puts focus inside parentheses
 imap cll console.log();<Esc>==f(a
 " Console log from visual mode on next line, puts visual selection inside parentheses
 vmap cll yocll<Esc>p
 " Console log from normal mode, inserted on next line with word your on inside parentheses
 nmap cll yiwocll<Esc>p
 " set background=dark
 nmap cll yiwocll<Esc>p

 imap ii <Esc>
 let g:user_emmet_leader_key='<C-L>'
 imap uu <C-L>,

 " Ignore some folders and files for CtrlP indexing
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.yardoc\|vendor\|node_modules\|log\|tmp$',
  \ 'file': '\.so$\|\.dat$|\.DS_Store$'
  \ }
" remove status line
 "  set noshowmode
 " set noruler
 "set laststatus=1
 "set noshowcmd
 "set cmdheight=1
 "
 "
:nmap <c-s> :w<CR>
:imap <c-s> <Esc>:w<CR>a
 nnoremap <Leader><space> :noh<cr>




